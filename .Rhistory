install.packages("FactoMineR")
library(FactoMineR)
read.csv(tea, sep = ",", header = TRUE)
read.table(tea, sep = "", header = FALSE)
load(tea, envir = parent.frame(), verbose = FALSE)
tea <- read.table(tea, sep = "", header = FALSE)
tea <-
data("tea")
data("tea")
str(tea)
gather(tea) %>% ggplot(aes(value)) + geom_bar() + facet_wrap("key", scales = "free")
gather(tea) %>% ggplot(aes(value), type = geom_bar(), theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))) + facet_wrap("key", scales = "free")
pairs(tea)
p <- ggpairs(tea, mapping = aes(), lower = list(combo = wrap("facethist", bins = 20)))
p
summary(tea)
mca <- MCA(tea, graph = FALSE)
summary(mca)
plot(tea, invisible=c("ind"), habillage = "quali")
install.packages("FactoMineR")
library(FactoMineR)
data("tea")
str(tea)
dim(tea)
mca <- MCA(tea, graph = FALSE)
summary(mca)
summary("mca")
plot(tea, invisible=c("ind"), habillage = "quali")
plot(tea, invisible=c("ind"))
library(MASS); library(tidyr); library(dplyr); library(ggplot2); library(GGally)
mca <- MCA(tea, graph = FALSE)
summary("mca")
plot(tea, invisible=c("ind"))
summary(tea)
mca <- MCA(tea, graph = FALSE)
summary(mca)
plot(mca, invisible=c("ind"))
rownames(tea)
colnames(tea)
keep_columns <- c("tearoom", "where", "price", "friends", "How", "sugar", "how", "tea.time", "frequency", "SPC")
tea_use <- select(tea, one_of(keep_columns))
mca <- MCA(tea_use, graph = FALSE)
summary(mca)
plot(mca, invisible=c("ind"))
keep_columns <- c("tearoom", "where", "price", "how", "tea.time", "frequency", "SPC")
tea_use <- select(tea, one_of(keep_columns))
mca <- MCA(tea_use, graph = FALSE)
summary(mca)
plot(mca, invisible=c("ind"))
plot(mca, invisible=c("ind"), habillage = "quali")
library(FactoMineR)
data("tea")
library(MASS); library(tidyr); library(dplyr); library(ggplot2); library(GGally)
str(tea)
dim(tea)
knitr::opts_chunk$set(echo = TRUE)
str(tea)
install.packages("FactoMineR")
install.packages("FactoMineR")
knitr::opts_chunk$set(echo = TRUE)
install.packages("FactoMineR")
data("tea")
library(FactoMineR)
data("tea")
library(MASS); library(tidyr); library(dplyr); library(ggplot2); library(GGally)
str(tea)
dim(tea)
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
install.packages("FactoMineR")
library(FactoMineR)
data("tea")
library(MASS); library(tidyr); library(dplyr); library(ggplot2); library(GGally)
str(tea)
dim(tea)
install.packages("FactoMineR")
install.packages("FactoMineR")
knitr::opts_chunk$set(echo = TRUE)
install.packages("FactoMineR")
library(FactoMineR)
data("tea")
library(MASS); library(tidyr); library(dplyr); library(ggplot2); library(GGally)
data("tea")
str(tea)
dim(tea)
knitr::kable(tea, caption = "Tea table")
knitr::kable(tea_use, caption = "Tea table")
gather(tea) %>% ggplot(aes(value)) + geom_bar() + facet_wrap("key", scales = "free")
keep_columns <- c("tearoom", "where", "price", "how", "tea.time", "frequency", "SPC")
tea_use <- select(tea, one_of(keep_columns))
mca <- MCA(tea_use, graph = FALSE)
summary(mca)
plot(mca, invisible=c("ind"), habillage = "quali")
install.packages("FactoMineR", eval = FALSE)
install.packages("FactoMineR", eval = FALSE)
install.packages("FactoMineR", repos = "http://cran.us.r-project.org")
install.packages("FactoMineR", repos = "http://cran.us.r-project.org")
library(MASS); library(tidyr); library(dplyr); library(ggplot2); library(GGally)
warning = F
library(MASS); library(tidyr); library(dplyr); library(ggplot2); library(GGally)
library(MASS); library(tidyr); library(dplyr); library(ggplot2); library(GGally)
library(MASS); library(tidyr); library(dplyr); library(ggplot2); library(GGally)
knitr::opts_chunk$set(echo = TRUE)
m <- lm(happ.score ~ gdpcapita + socialsupport + hlifeexp + freedom + corruption + generosity, data = happiness2)
library(ggplot2); library(GGally); library(tidyr); library(dplyr)
happiness2 <- read.table("happiness2.csv", sep = ",", header=TRUE)
gather(happiness2) %>% ggplot(aes(value)) + geom_histogram() + facet_wrap("key", scales = "free") + ggtitle("Distributions of the variables")
summary(happiness2)
p <- ggpairs(happiness2, mapping = aes(), lower = list(combo = wrap("facethist", bins = 20))) + ggtitle("Correlations of the variables")
p
m <- lm(happ.score ~ gdpcapita + socialsupport + hlifeexp + freedom + corruption + generosity, data = happiness2)
summary(m)
CI <- confint(m) %>% exp
cbind(CI)
m <- lm(freedom ~ gdpcapita + socialsupport + hlifeexp + corruption + generosity, data = happiness2)
summary(m)
CI <- confint(m) %>% exp
cbind(CI)
m <- lm(freedom ~ gdpcapita + socialsupport + hlifeexp + corruption + generosity + happ.score, data = happiness2)
summary(m)
CI <- confint(m) %>% exp
cbind(CI)
m <- lm(freedom ~ gdpcapita + socialsupport + hlifeexp + corruption + generosity, data = happiness2)
summary(m)
CI <- confint(m) %>% exp
cbind(CI)
library(MASS)
pca_happiness2 <- prcomp(happiness2)
s <- summary(pca_happiness2)
s
pca_pr <- round(100*s$importance[2,], digits = 1)
pca_pr
pc_lab <- paste0(names(pca_pr), " (", pca_pr,"%)")
biplot(pca_happiness2, cex = c(0.5, 1.5), xlab = pc_lab[1], ylab = pc_lab[2], sub = "Principal components explaining variance in non-standardized happiness2 data")
library(MASS)
pca_happiness2 <- prcomp(happiness2)
s <- summary(pca_happiness2)
s
pca_pr <- round(100*s$importance[2,], digits = 1)
pca_pr
pc_lab <- paste0(names(pca_pr), " (", pca_pr,"%)")
biplot(pca_happiness2, cex = c(0.5, 1.5), xlab = pc_lab[1], ylab = pc_lab[2], sub = "Principal components explaining variance in non-standardized happiness2 data")
library(MASS); library(scales)
happiness2_std <- scale(happiness2)
summary(happiness2_std)
pca_happiness2_std <- prcomp(happiness2_std)
s_std <- summary(pca_happiness2_std)
s_std
pca_pr_std <- round(100*s_std$importance[2,], digits = 1)
pca_pr_std
pc_lab_std <- paste0(names(pca_pr_std), " (", pca_pr_std,"%)")
biplot(pca_happiness2_std, cex = c(0.5, 1.5), xlab = pc_lab_std[1], ylab = pc_lab_std[2], sub = "Principal components explaining variance in standardized happiness2 data")
rownames(happiness2)
# read data
happiness <- read.table("world-happiness 2016.csv", sep = ",", header=TRUE)
str(happiness)
dim(happiness)
summary(happiness)
# look at the column names
colnames(happiness)
# rename the variables with shorter names
colnames(happiness)[1] <- "country"
colnames(happiness)[2] <- "region"
colnames(happiness)[3] <- "happ.rank"
colnames(happiness)[4] <- "happ.score"
colnames(happiness)[5] <- "lower.confint"
colnames(happiness)[6] <- "upper.confint"
colnames(happiness)[7] <- "gdpcapita"
colnames(happiness)[8] <- "socialsupport"
colnames(happiness)[9] <- "hlifeexp"
colnames(happiness)[10] <- "freedom"
colnames(happiness)[11] <- "corruption"
colnames(happiness)[12] <- "generosity"
colnames(happiness)[13] <- "dystopia"
library(dplyr)
# select columns to keep
keep <- c("country", "happ.score", "gdpcapita", "socialsupport", "hlifeexp", "freedom", "corruption", "generosity")
# select the 'keep' columns
happiness2 <- dplyr::select(happiness, one_of(keep))
# look at the rownames
rownames(happiness2)
# define the row names of the data by the country names
rownames(happiness2) <- happiness2$country
# look at the rownames
rownames(happiness2)
# remove the country name column
happiness2 <- dplyr::select(happiness2, -country)
# look at the structure of the data
str(happiness2)
# and summary
summary(happiness2)
# save data to data folder
write.csv(happiness2, file = "happiness2.csv", row.names=FALSE)
# read data
read.table("happiness2.csv", sep = ",", header=TRUE)
setwd("~/Desktop/IODS-final")
# Elina Turunen
# elina.turunen@helsinki.fi
# 1.3.2017
# Introduction to open data science course, spring 2017
# Final assignment: Data Wrangling
# read data
happiness <- read.table("world-happiness 2016.csv", sep = ",", header=TRUE)
str(happiness)
dim(happiness)
summary(happiness)
# look at the column names
colnames(happiness)
# rename the variables with shorter names
colnames(happiness)[1] <- "country"
colnames(happiness)[2] <- "region"
colnames(happiness)[3] <- "happ.rank"
colnames(happiness)[4] <- "happ.score"
colnames(happiness)[5] <- "lower.confint"
colnames(happiness)[6] <- "upper.confint"
colnames(happiness)[7] <- "gdpcapita"
colnames(happiness)[8] <- "socialsupport"
colnames(happiness)[9] <- "hlifeexp"
colnames(happiness)[10] <- "freedom"
colnames(happiness)[11] <- "corruption"
colnames(happiness)[12] <- "generosity"
colnames(happiness)[13] <- "dystopia"
library(dplyr)
# select columns to keep
keep <- c("country", "happ.score", "gdpcapita", "socialsupport", "hlifeexp", "freedom", "corruption", "generosity")
# select the 'keep' columns
happiness2 <- dplyr::select(happiness, one_of(keep))
# look at the rownames
rownames(happiness2)
# define the row names of the data by the country names
rownames(happiness2) <- happiness2$country
# look at the rownames
rownames(happiness2)
# remove the country name column
happiness2 <- dplyr::select(happiness2, -country)
# look at the structure of the data
str(happiness2)
# and summary
summary(happiness2)
# save data to data folder
write.csv(happiness2, file = "happiness2.csv", row.names=FALSE)
# read data
read.table("happiness2.csv", sep = ",", header=TRUE)
happiness <- read.table("world-happiness 2016.csv", sep = ",", header=TRUE)
str(happiness)
dim(happiness)
summary(happiness)
colnames(happiness)
colnames(happiness)[1] <- "country"
colnames(happiness)[2] <- "region"
colnames(happiness)[3] <- "happ.rank"
colnames(happiness)[4] <- "happ.score"
colnames(happiness)[5] <- "lower.confint"
colnames(happiness)[6] <- "upper.confint"
colnames(happiness)[7] <- "gdpcapita"
colnames(happiness)[8] <- "socialsupport"
colnames(happiness)[9] <- "hlifeexp"
colnames(happiness)[10] <- "freedom"
colnames(happiness)[11] <- "corruption"
colnames(happiness)[12] <- "generosity"
colnames(happiness)[13] <- "dystopia"
library(dplyr)
keep <- c("country", "happ.score", "gdpcapita", "socialsupport", "hlifeexp", "freedom", "corruption", "generosity")
happiness2 <- dplyr::select(happiness, one_of(keep))
rownames(happiness2)
rownames(happiness2) <- happiness2$country
rownames(happiness2)
happiness2 <- dplyr::select(happiness2, -country)
str(happiness2)
summary(happiness2)
write.csv(happiness2, file = "happiness2.csv", row.names=TRUE)
read.table("happiness2.csv", sep = ",", header=TRUE)
happiness2 <- read.table("happiness2.csv", sep = ",", header=TRUE)
rownames(happiness2)
happiness2 <- read.table("happiness2.csv", sep = ",", header=TRUE)
str(happiness2)
happiness2 <- read.table("happiness2.csv", sep = ",", header=TRUE)
str(happiness2)
colnames(happiness2)[1] <- "country"
colnames(happiness2)
rownames(happiness2) <- happiness2$country
rownames(happiness2)
str(happiness2)
happiness2 <- select(happiness2, -country)
happiness2 <- read.table("happiness2.csv", sep = ",", header=TRUE)
str(happiness2)
colnames(happiness2)[1] <- "country"
colnames(happiness2)
rownames(happiness2) <- happiness2$country
rownames(happiness2)
happiness2 <- read.table("happiness2.csv", sep = ",", header=TRUE)
str(happiness2)
colnames(happiness2)[1] <- "country"
rownames(happiness2) <- happiness2$country
rownames(happiness2)
happiness2 <- read.table("happiness2.csv", sep = ",", header=TRUE)
str(happiness2)
colnames(happiness2)[1] <- "country"
rownames(happiness2) <- happiness2$country
rownames(happiness2)
str(happiness2)
read.table("happiness2.csv", sep = ",", header=TRUE)
happiness2 <- read.table("happiness2.csv", sep = ",", header=TRUE)
str(happiness2)
colnames(happiness2)[1] <- "country"
rownames(happiness2) <- happiness2$country
rownames(happiness2)
str(happiness2)
happiness2 <- select(happiness2, -country)
happiness2 <- read.table("happiness2.csv", sep = ",", header=TRUE)
str(happiness2)
colnames(happiness2)[1] <- "country"
rownames(happiness2) <- happiness2$country
rownames(happiness2)
str(happiness2)
happiness2 <- dplyr::select(happiness2, -country)
happiness2 <- read.table("happiness2.csv", sep = ",", header=TRUE)
str(happiness2)
colnames(happiness2)[1] <- "country"
rownames(happiness2) <- happiness2$country
rownames(happiness2)
str(happiness2)
happiness2 <- dplyr::select(happiness2, -country)
str(happiness2)
happiness2 <- read.table("happiness2.csv", sep = ",", header=TRUE)
str(happiness2)
colnames(happiness2)[1] <- "country"
rownames(happiness2) <- happiness2$country
rownames(happiness2)
str(happiness2)
happiness2 <- dplyr::select(happiness2, -country)
str(happiness2)
rownames(happiness2)
happiness2 <- read.table("happiness2.csv", sep = ",", header=TRUE)
str(happiness2)
colnames(happiness2)[1] <- "country"
rownames(happiness2) <- happiness2$country
rownames(happiness2)
happiness2 <- dplyr::select(happiness2, -country)
rownames(happiness2)
happiness2 <- read.table("happiness2.csv", sep = ",", header=TRUE)
str(happiness2)
rownames(happiness2)
happiness2 <- read.table("happiness2.csv", sep = ",", header=TRUE)
str(happiness2)
colnames(happiness2)[1] <- "country"
rownames(happiness2) <- happiness2$country
rownames(happiness2)
happiness2 <- read.table("happiness2.csv", sep = ",", header=TRUE)
str(happiness2)
colnames(happiness2)[1] <- "country"
rownames(happiness2) <- happiness2$country
rownames(happiness2)
happiness2 <- dplyr::select(happiness2, -country)
rownames(happiness2)
library(ggplot2); library(GGally); library(tidyr); library(dplyr)
gather(happiness2) %>% ggplot(aes(value)) + geom_histogram() + facet_wrap("key", scales = "free") + ggtitle("Distributions of the variables")
summary(happiness2)
p <- ggpairs(happiness2, mapping = aes(), lower = list(combo = wrap("facethist", bins = 20))) + ggtitle("Correlations of the variables")
p
View(happiness2)
library(MASS); library(scales)
happiness2_std <- scale(happiness2)
summary(happiness2_std)
pca_happiness2_std <- prcomp(happiness2_std)
s_std <- summary(pca_happiness2_std)
s_std
pca_pr_std <- round(100*s_std$importance[2,], digits = 1)
pca_pr_std
pc_lab_std <- paste0(names(pca_pr_std), " (", pca_pr_std,"%)")
biplot(pca_happiness2_std, cex = c(0.5, 1.5), xlab = pc_lab_std[1], ylab = pc_lab_std[2], sub = "Principal components explaining variance in standardized happiness2 data")
library(MASS); library(scales)
happiness2_std <- scale(happiness2)
pca_happiness2_std <- prcomp(happiness2_std)
s_std <- summary(pca_happiness2_std)
s_std
pca_pr_std <- round(100*s_std$importance[2,], digits = 1)
pca_pr_std
pc_lab_std <- paste0(names(pca_pr_std), " (", pca_pr_std,"%)")
biplot(pca_happiness2_std, cex = c(0.5, 1.5), xlab = pc_lab_std[1], ylab = pc_lab_std[2], sub = "Principal components explaining variance in standardized happiness2 data")
library(MASS); library(scales)
happiness2_std <- scale(happiness2)
pca_happiness2_std <- prcomp(happiness2_std)
pca_happiness2_std
s_std <- summary(pca_happiness2_std)
s_std
pca_pr_std <- round(100*s_std$importance[2,], digits = 1)
pca_pr_std
pc_lab_std <- paste0(names(pca_pr_std), " (", pca_pr_std,"%)")
biplot(pca_happiness2_std, cex = c(0.5, 1.5), xlab = pc_lab_std[1], ylab = pc_lab_std[2], sub = "Principal components explaining variance in standardized happiness2 data")
set.seed(123)
dist_eu <- dist(happiness2, method = "euclidean")
k_max <- 10
twcss <- sapply(1:k_max, function(k){kmeans(dist_eu, k)$tot.withinss})
plot(1:k_max, twcss, type='b')
set.seed(123)
dist_eu <- dist(happiness2, method = "euclidean")
k_max <- 10
twcss <- sapply(1:k_max, function(k){kmeans(dist_eu, k)$tot.withinss})
plot(1:k_max, twcss, type='b')
km <-kmeans(dist_eu, centers = 2)
plot(1:k_max, twcss, type='b')
set.seed(123)
dist_eu <- dist(happiness2, method = "euclidean")
k_max <- 10
twcss <- sapply(1:k_max, function(k){kmeans(dist_eu, k)$tot.withinss})
plot(1:k_max, twcss, type='b')
km <-kmeans(dist_eu, centers = 2)
pairs(happiness2, col = km$cluster)
happiness2 <- read.table("happiness2.csv", sep = ",", header=TRUE)
str(happiness2)
colnames(happiness2)[1] <- "country"
rownames(happiness2) <- happiness2$country
rownames(happiness2)
happiness2 <- dplyr::select(happiness2, -country)
happiness2_f <- mutate(happiness2, high_freedom = freedom > 0.35)
g2 <- ggplot(data = happiness2_f, aes(x = high_freedom))
happiness2_f <- mutate(happiness2, high_freedom = freedom > 0.35)
g2 <- ggplot(data = happiness2_f, aes(x = high_freedom))
g2
m <- glm(high_freedom ~ gdpcapita + socialsupport + hlifeexp + corruption + generosity , data = happiness2_f, family = "binomial")
summary(m)
coef(m)
m <- glm(high_freedom ~ gdpcapita + socialsupport + hlifeexp + corruption + generosity + happ.score, data = happiness2_f, family = "binomial")
summary(m)
coef(m)
m <- glm(high_freedom ~ gdpcapita + socialsupport + hlifeexp + corruption + generosity, data = happiness2_f, family = "binomial")
summary(m)
coef(m)
happiness2_f <- mutate(happiness2, high_freedom = freedom > 0.35)
g2 <- ggplot(data = happiness2_f, aes(x = high_freedom))
g2 + geom_bar()
m <- glm(high_freedom ~ gdpcapita + socialsupport + hlifeexp + corruption + generosity, data = happiness2_f, family = "binomial")
summary(m)
OR <- coef(m) %>% exp
CI <- confint(m) %>% exp
cbind(OR, CI)
happiness2_f <- mutate(happiness2, high_freedom = freedom > 0.35)
g2 <- ggplot(data = happiness2_f, aes(x = high_freedom))
g2 + geom_bar() + ggtitle("Distribution of the high freedom variable")
happiness2 <- read.table("happiness2.csv", sep = ",", header=TRUE, row.names = F)
happiness2 <- read.table("happiness2.csv", sep = ",", header=TRUE, rownames = F)
happiness2 <- read.table("happiness2.csv", sep = ",", header=TRUE, row.names=F)
happiness2 <- read.table("happiness2.csv", sep = ",", header=TRUE)
str(happiness2)
colnames(happiness2)[1] <- "country"
rownames(happiness2) <- happiness2$country
read.table("happiness2.csv", sep = ",", header=TRUE)
setwd("~/Desktop/IODS-final")
happiness <- read.table("world-happiness 2016.csv", sep = ",", header=TRUE)
str(happiness)
dim(happiness)
summary(happiness)
# look at the column names
colnames(happiness)
# rename the variables with shorter names
colnames(happiness)[1] <- "country"
colnames(happiness)[2] <- "region"
colnames(happiness)[3] <- "happ.rank"
colnames(happiness)[4] <- "happ.score"
colnames(happiness)[5] <- "lower.confint"
colnames(happiness)[6] <- "upper.confint"
colnames(happiness)[7] <- "gdpcapita"
colnames(happiness)[8] <- "socialsupport"
colnames(happiness)[9] <- "hlifeexp"
colnames(happiness)[10] <- "freedom"
colnames(happiness)[11] <- "corruption"
colnames(happiness)[12] <- "generosity"
colnames(happiness)[13] <- "dystopia"
library(dplyr)
# select columns to keep
keep <- c("country", "happ.score", "gdpcapita", "socialsupport", "hlifeexp", "freedom", "corruption", "generosity")
# select the 'keep' columns
happiness2 <- dplyr::select(happiness, one_of(keep))
# look at the rownames
rownames(happiness2)
# define the row names of the data by the country names
rownames(happiness2) <- happiness2$country
# look at the rownames
rownames(happiness2)
# remove the country name column
happiness2 <- dplyr::select(happiness2, -country)
str(happiness2)
summary(happiness2)
write.csv(happiness2, file = "happiness2.csv", row.names=FALSE)
read.table("happiness2.csv", sep = ",", header=TRUE)
summary(happiness2)
write.csv(happiness2, file = "happiness2.csv", row.names=TRUE)
read.table("happiness2.csv", sep = ",", header=TRUE)
happiness2 <- read.table("happiness2.csv", sep = ",", header=TRUE)
str(happiness2)
colnames(happiness2)[1] <- "country"
rownames(happiness2) <- happiness2$country
rownames(happiness2)
happiness2 <- dplyr::select(happiness2, -country)
set.seed(123)
dist_eu <- dist(happiness2, method = "euclidean")
k_max <- 10
twcss <- sapply(1:k_max, function(k){kmeans(dist_eu, k)$tot.withinss})
plot(1:k_max, twcss, type='b')
km <-kmeans(dist_eu, centers = 2)
pairs(happiness2, col = km$cluster)
library(MASS); library(scales)
happiness2_std <- scale(happiness2)
pca_happiness2_std <- prcomp(happiness2_std)
pca_happiness2_std
s_std <- summary(pca_happiness2_std)
s_std
pca_pr_std <- round(100*s_std$importance[2,], digits = 1)
pca_pr_std
pc_lab_std <- paste0(names(pca_pr_std), " (", pca_pr_std,"%)")
biplot(pca_happiness2_std, cex = c(0.5, 1.5), xlab = pc_lab_std[1], ylab = pc_lab_std[2], sub = "Principal components explaining variance in standardized happiness2 data")
