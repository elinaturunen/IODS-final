summary(gii)
colnames(gii)
colnames(hd)
# rename the variables with (shorter) descriptive names
colnames(hd)[1] <- "hdirank"
colnames(hd)[2] <- "country"
colnames(hd)[3] <- "hdi"
colnames(hd)[4] <- "lifeexpbirth"
colnames(hd)[5] <- "expeduyears"
colnames(hd)[6] <- "meaneduyears"
colnames(hd)[7] <- "gnicapita"
colnames(hd)[8] <- "gnicapitarank_minus_hdirank"
colnames(gii)[1] <- "giirank"
colnames(gii)[2] <- "country"
colnames(gii)[3] <- "gii"
colnames(gii)[4] <- "maternalmortratio"
colnames(gii)[5] <- "adolbirth"
colnames(gii)[6] <- "parliamentF"
colnames(gii)[7] <- "edu2F"
colnames(gii)[8] <- "edu2M"
colnames(gii)[9] <- "labF"
colnames(gii)[10] <- "labM"
# print out the new column names of the data
colnames(hd)
colnames(gii)
# define new columns edu2ratio and labratio
gii <- mutate(gii, edu2ratio = edu2F / edu2M)
gii <- mutate(gii, labratio = labF / labM)
# common columns to use as identifiers
join_by <- c("country")
# join datasets by the selected identifiers
human <- inner_join(hd, gii, by = join_by)
# see column names
colnames(human)
# glimpse data
glimpse(human)
# save data to data folder
write.csv(human, file = "human1.csv")
human1 <- read.table("human1.csv", sep = ",", header=TRUE)
write.csv(human, file = "human1.csv", row.names=FALSE)
human1 <- read.table("human1.csv", sep = ",", header=TRUE)
str(human1)
human <- read.table("human1.csv", sep = ",", header=TRUE)
str(human)
# transform the Gross National Income (GNI) variable to numeric
# look at the structure of GNI column
str(human$gnicapita)
# remove the commas and print out a numeric version of it
human$gnicapita <- str_replace(human$gnicapita, pattern=",", replace ="") %>% as.numeric(human$GNI)
# select columns to keep
keep <- c("country", "edu2ratio", "labratio", "expeduyears", "lifeexpbirth", "gnicapita", "maternalmortratio", "adolbirth", "parliamentF")
# select the 'keep' columns
human <- select(human, one_of(keep))
# remove rows with missing values
# print out a completeness indicator
complete.cases(human)
# print out the data with a completeness indicator as the last column
data.frame(human[-1], comp = complete.cases(human))
# filter out rows with missing values
human <- filter(human, complete.cases(human))
# remove observations relating to regions
# look at the last 10 observations of human
tail(human, n = 10L)
# define the last indice we want to keep
last <- nrow(human) - 7
# choose everything until the last 7 observations
human <- human[1:last, ]
# define the row names of the data by the country names
rownames(human) <- human$country
# remove the country name column
human <- select(human, -country)
str(human)
write.csv(human, file = "human2.csv", row.names=TRUE)
human <- read.table("human2.csv", sep = ",", header=TRUE)
str(human)
row.names(human)
str(human)
str(human2)
human2 <- read.table("human2.csv", sep = ";", header=TRUE)
str(human2)
human2 <- read.table("human2.csv", sep = ",", header=TRUE)
str(human2)
rownames(human2)
rownames(human) <- human$country
rownames(human2) <- human2$country
rownames(human2)
human <- select(human, -country)
human2 <- select(human2, -country)
colnames(human2)
str(human2)
colnames(human2)[1] <- "country"
colnames(human2)
rownames(human2) <- human2$country
rownames(human2)
human2 <- select(human2, -country)
str(human2)
dim(human2)
library(MASS); library(tidyr); library(dplyr)
pairs(human)
p <- ggpairs(human2, mapping = aes(), lower = list(combo = wrap("facethist", bins = 20)))
library(MASS); library(tidyr); library(dplyr); library(ggplot2)
p <- ggpairs(human2, mapping = aes(), lower = list(combo = wrap("facethist", bins = 20)))
library(MASS); library(tidyr); library(dplyr); library(ggplot2); library(GGally)
p <- ggpairs(human2, mapping = aes(), lower = list(combo = wrap("facethist", bins = 20)))
p
ggpairs(human2)
gather(human2) %>% glimpse
gather(human2) %>% ggplot(aes(value)) + geom_bar() + facet_wrap("key", scales = "free")
gather(human2) %>% ggplot(aes(value)) + geom_histogram() + facet_wrap("key", scales = "free")
summary(human2)
pca_human2 <- prcomp(human2)
biplot(pca_human2, choices = 1:2)
human2_std <- scale(human2)
summary(human2_std)
pca_human2 <- prcomp(human2_std)
biplot(pca_human2, choices = 1:2)
biplot(pca_human2, choices = 1:2, cex = c(0.5, 2))
biplot(pca_human2, choices = 1:2, cex = c(0.5, 1.5))
pca_human2 <- prcomp(human2)
biplot(pca_human2, choices = 1:2, ggtitle("Principal components explaining variance in non-standardized human2 data"))
biplot(pca_human2, choices = 1:2) + ggtitle("Principal components explaining variance in non-standardized human2 data"))
biplot(pca_human2, choices = 1:2, title("Principal components explaining variance in non-standardized human2 data"))
biplot(pca_human2, choices = 1:2, title("Principal components explaining variance in non-standardized human2 data", cex = 1.5, font = 2))
biplot(pca_human2, choices = 1:2, title("Principal components explaining variance in non-standardized human2 data", cex = 0.5, font = 2))
biplot(pca_human2, choices = 1:2, title("Principal components explaining variance in non-standardized human2 data", cex = 0.5, font = 1))
biplot(pca_human2, choices = 1:2, title("Principal components explaining variance in non-standardized human2 data", cex = 0.5, font = 1))
biplot(pca_human2, choices = 1:2, title("Principal components explaining variance in non-standardized human2 data", cex = 0.5, font = 4))
biplot(pca_human2, choices = 1:2, title("Principal components explaining variance in non-standardized human2 data", cex = 0.5, font =0.5))
biplot(pca_human2, choices = 1:2, title("Principal components explaining variance in non-standardized human2 data", cex = 2.5, font =1.5))
biplot(pca_human2, choices = 1:2, title("Principal components explaining variance in non-standardized human2 data", cex = 0.2, font = 2))
biplot(pca_human2, choices = 1:2, subtitle("Principal components explaining variance in non-standardized human2 data", cex = 0.2, font = 2))
biplot(pca_human2, choices = 1:2, title(sub = "Principal components explaining variance in non-standardized human2 data", cex = 0.2, font = 2))
biplot(pca_human2, choices = 1:2, sub = "Principal components explaining variance in non-standardized human2 data", par(c(2, 0.2))
cex = 0.2, font = 2)
biplot(pca_human2, choices = 1:2, sub = "Principal components explaining variance in non-standardized human2 data")
biplot(pca_human2, choices = 1:2, cex = c(0.5, 1.5), sub = "Principal components explaining variance in non-standardized human2 data")
human2_std <- scale(human2)
summary(human2_std)
pca_human2 <- prcomp(human2_std)
biplot(pca_human2, choices = 1:2, cex = c(0.5, 1.5), sub = "Principal components explaining variance in standardized human2 data")
pca_human2 <- prcomp(human2)
biplot(pca_human2, choices = 1:2, cex = c(0.5, 1.5), sub = "Principal components explaining variance in non-standardized human2 data")
s <- summary(pca_human2)
s
library(scales)
pca_pr <- round(100*s$importance[2,], digits = 1)
pca_pr
pc_lab <- paste0(names(pca_pr), " (", pca_pr, "%)")
biplot(pca_human2, cex = c(0.5, 1.5), xlab = pc_lab[1], ylab = pc_lab[2], sub = "Principal components explaining variance in non-standardized human2 data")
human2_std <- scale(human2)
summary(human2_std)
pca_human2_std <- prcomp(human2_std)
biplot(pca_human2_std, choices = 1:2, cex = c(0.5, 1.5), sub = "Principal components explaining variance in standardized human2 data")
s_std <- summary(pca_human2_std)
s_std
pca_pr_std <- round(100*s_std$importance[2,], digits = 1)
pca_pr_std
pc_lab_std <- paste0(names(pca_pr_std), " (", pca_pr, "%)")
biplot(pca_human2, cex = c(0.5, 1.5), xlab = pc_lab_std[1], ylab = pc_lab_std[2], sub = "Principal components explaining variance in non-standardized human2 data")
biplot(pca_human2_std, cex = c(0.5, 1.5), xlab = pc_lab_std[1], ylab = pc_lab_std[2], sub = "Principal components explaining variance in non-standardized human2 data")
pca_human2 <- prcomp(human2)
biplot(pca_human2, choices = 1:2, cex = c(0.5, 1.5), sub = "Principal components explaining variance in non-standardized human2 data")
s <- summary(pca_human2)
s
pca_pr <- round(100*s$importance[2,], digits = 1)
pca_pr
pc_lab <- paste0(names(pca_pr), " (", pca_pr, "%)")
biplot(pca_human2, cex = c(0.5, 1.5), xlab = pc_lab[1], ylab = pc_lab[2], sub = "Principal components explaining variance in non-standardized human2 data")
human2_std <- scale(human2)
summary(human2_std)
pca_human2_std <- prcomp(human2_std)
s_std <- summary(pca_human2_std)
s_std
pca_pr_std <- round(100*s_std$importance[2,], digits = 1)
pca_pr_std
pc_lab_std <- paste0(names(pca_pr_std), " (", pca_pr_std, "%)")
biplot(pca_human2_std, cex = c(0.5, 1.5), xlab = pc_lab_std[1], ylab = pc_lab_std[2], sub = "Principal components explaining variance in non-standardized human2 data")
install.packages("FactoMineR")
library(FactoMineR)
read.csv(tea, sep = ",", header = TRUE)
read.table(tea, sep = "", header = FALSE)
load(tea, envir = parent.frame(), verbose = FALSE)
tea <- read.table(tea, sep = "", header = FALSE)
tea <-
data("tea")
data("tea")
str(tea)
gather(tea) %>% ggplot(aes(value)) + geom_bar() + facet_wrap("key", scales = "free")
gather(tea) %>% ggplot(aes(value), type = geom_bar(), theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))) + facet_wrap("key", scales = "free")
pairs(tea)
p <- ggpairs(tea, mapping = aes(), lower = list(combo = wrap("facethist", bins = 20)))
p
summary(tea)
mca <- MCA(tea, graph = FALSE)
summary(mca)
plot(tea, invisible=c("ind"), habillage = "quali")
install.packages("FactoMineR")
library(FactoMineR)
data("tea")
str(tea)
dim(tea)
mca <- MCA(tea, graph = FALSE)
summary(mca)
summary("mca")
plot(tea, invisible=c("ind"), habillage = "quali")
plot(tea, invisible=c("ind"))
library(MASS); library(tidyr); library(dplyr); library(ggplot2); library(GGally)
mca <- MCA(tea, graph = FALSE)
summary("mca")
plot(tea, invisible=c("ind"))
summary(tea)
mca <- MCA(tea, graph = FALSE)
summary(mca)
plot(mca, invisible=c("ind"))
rownames(tea)
colnames(tea)
keep_columns <- c("tearoom", "where", "price", "friends", "How", "sugar", "how", "tea.time", "frequency", "SPC")
tea_use <- select(tea, one_of(keep_columns))
mca <- MCA(tea_use, graph = FALSE)
summary(mca)
plot(mca, invisible=c("ind"))
keep_columns <- c("tearoom", "where", "price", "how", "tea.time", "frequency", "SPC")
tea_use <- select(tea, one_of(keep_columns))
mca <- MCA(tea_use, graph = FALSE)
summary(mca)
plot(mca, invisible=c("ind"))
plot(mca, invisible=c("ind"), habillage = "quali")
library(FactoMineR)
data("tea")
library(MASS); library(tidyr); library(dplyr); library(ggplot2); library(GGally)
str(tea)
dim(tea)
knitr::opts_chunk$set(echo = TRUE)
str(tea)
install.packages("FactoMineR")
install.packages("FactoMineR")
knitr::opts_chunk$set(echo = TRUE)
install.packages("FactoMineR")
data("tea")
library(FactoMineR)
data("tea")
library(MASS); library(tidyr); library(dplyr); library(ggplot2); library(GGally)
str(tea)
dim(tea)
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
install.packages("FactoMineR")
library(FactoMineR)
data("tea")
library(MASS); library(tidyr); library(dplyr); library(ggplot2); library(GGally)
str(tea)
dim(tea)
install.packages("FactoMineR")
install.packages("FactoMineR")
knitr::opts_chunk$set(echo = TRUE)
install.packages("FactoMineR")
library(FactoMineR)
data("tea")
library(MASS); library(tidyr); library(dplyr); library(ggplot2); library(GGally)
data("tea")
str(tea)
dim(tea)
knitr::kable(tea, caption = "Tea table")
knitr::kable(tea_use, caption = "Tea table")
gather(tea) %>% ggplot(aes(value)) + geom_bar() + facet_wrap("key", scales = "free")
keep_columns <- c("tearoom", "where", "price", "how", "tea.time", "frequency", "SPC")
tea_use <- select(tea, one_of(keep_columns))
mca <- MCA(tea_use, graph = FALSE)
summary(mca)
plot(mca, invisible=c("ind"), habillage = "quali")
install.packages("FactoMineR", eval = FALSE)
install.packages("FactoMineR", eval = FALSE)
install.packages("FactoMineR", repos = "http://cran.us.r-project.org")
install.packages("FactoMineR", repos = "http://cran.us.r-project.org")
library(MASS); library(tidyr); library(dplyr); library(ggplot2); library(GGally)
warning = F
library(MASS); library(tidyr); library(dplyr); library(ggplot2); library(GGally)
library(MASS); library(tidyr); library(dplyr); library(ggplot2); library(GGally)
library(MASS); library(tidyr); library(dplyr); library(ggplot2); library(GGally)
m <- lm(freedom ~ gdpcapita + socialsupport + hlifeexp + corruption + generosity + happ.score, data = happiness2)
happiness2 <- read.table("happiness2.csv", sep = ",", header=TRUE)
str(happiness2)
colnames(happiness2)[1] <- "country"
rownames(happiness2) <- happiness2$country
rownames(happiness2)
happiness2 <- dplyr::select(happiness2, -country)
setwd("~/Desktop/IODS-final")
m <- lm(freedom ~ gdpcapita + socialsupport + hlifeexp + corruption + generosity + happ.score, data = happiness2)
summary(m)
CI <- confint(m) %>% exp
library(ggplot2); library(GGally); library(tidyr); library(dplyr)
gather(happiness2) %>% ggplot(aes(value)) + geom_histogram() + facet_wrap("key", scales = "free") + ggtitle("Distributions of the variables")
summary(happiness2)
p <- ggpairs(happiness2, mapping = aes(), lower = list(combo = wrap("facethist", bins = 20))) + ggtitle("Correlations of the variables")
p
m <- lm(freedom ~ gdpcapita + socialsupport + hlifeexp + corruption + generosity + happ.score, data = happiness2)
summary(m)
CI <- confint(m) %>% exp
cbind(CI)
m <- lm(freedom ~ gdpcapita + socialsupport + hlifeexp + corruption + generosity, data = happiness2)
summary(m)
CI <- confint(m) %>% exp
cbind(CI)
* unordered list
library(MASS); library(scales)
happiness2_std <- scale(happiness2)
pca_happiness2_std <- prcomp(happiness2_std)
pca_happiness2_std
s_std <- summary(pca_happiness2_std)
s_std
pca_pr_std <- round(100*s_std$importance[2,], digits = 1)
pca_pr_std
pc_lab_std <- paste0(names(pca_pr_std), " (", pca_pr_std,"%)")
biplot(pca_happiness2_std, cex = c(0.5, 1.5), col = c("pink", "green"), xlab = pc_lab_std[1], ylab = pc_lab_std[2], sub = "Principal components explaining variance in standardized happiness2 data")
library(MASS); library(scales)
happiness2_std <- scale(happiness2)
pca_happiness2_std <- prcomp(happiness2_std)
pca_happiness2_std
s_std <- summary(pca_happiness2_std)
s_std
pca_pr_std <- round(100*s_std$importance[2,], digits = 1)
pca_pr_std
pc_lab_std <- paste0(names(pca_pr_std), " (", pca_pr_std,"%)")
biplot(pca_happiness2_std, cex = c(0.5, 1.5), col = c("blue", "green"), xlab = pc_lab_std[1], ylab = pc_lab_std[2], sub = "Principal components explaining variance in standardized happiness2 data")
library(MASS); library(scales)
happiness2_std <- scale(happiness2)
pca_happiness2_std <- prcomp(happiness2_std)
pca_happiness2_std
s_std <- summary(pca_happiness2_std)
s_std
pca_pr_std <- round(100*s_std$importance[2,], digits = 1)
pca_pr_std
pc_lab_std <- paste0(names(pca_pr_std), " (", pca_pr_std,"%)")
biplot(pca_happiness2_std, cex = c(0.5, 1.5), col = c("grey", "green"), xlab = pc_lab_std[1], ylab = pc_lab_std[2], sub = "Principal components explaining variance in standardized happiness2 data")
library(MASS); library(scales)
happiness2_std <- scale(happiness2)
pca_happiness2_std <- prcomp(happiness2_std)
pca_happiness2_std
s_std <- summary(pca_happiness2_std)
s_std
pca_pr_std <- round(100*s_std$importance[2,], digits = 1)
pca_pr_std
pc_lab_std <- paste0(names(pca_pr_std), " (", pca_pr_std,"%)")
biplot(pca_happiness2_std, cex = c(0.5, 1.5), col = c("black", "green"), xlab = pc_lab_std[1], ylab = pc_lab_std[2], sub = "Principal components explaining variance in standardized happiness2 data")
library(MASS); library(scales)
happiness2_std <- scale(happiness2)
pca_happiness2_std <- prcomp(happiness2_std)
pca_happiness2_std
s_std <- summary(pca_happiness2_std)
s_std
pca_pr_std <- round(100*s_std$importance[2,], digits = 1)
pca_pr_std
pc_lab_std <- paste0(names(pca_pr_std), " (", pca_pr_std,"%)")
biplot(pca_happiness2_std, cex = c(0.5, 1.5), col = c("black", "darkgreen"), xlab = pc_lab_std[1], ylab = pc_lab_std[2], sub = "Principal components explaining variance in standardized happiness2 data")
library(MASS); library(scales)
happiness2_std <- scale(happiness2)
pca_happiness2_std <- prcomp(happiness2_std)
pca_happiness2_std
s_std <- summary(pca_happiness2_std)
s_std
pca_pr_std <- round(100*s_std$importance[2,], digits = 1)
pca_pr_std
pc_lab_std <- paste0(names(pca_pr_std), " (", pca_pr_std,"%)")
biplot(pca_happiness2_std, cex = c(0.5, 1.5), col = c("black", "darkgreen40"), xlab = pc_lab_std[1], ylab = pc_lab_std[2], sub = "Principal components explaining variance in standardized happiness2 data")
library(MASS); library(scales)
happiness2_std <- scale(happiness2)
pca_happiness2_std <- prcomp(happiness2_std)
pca_happiness2_std
s_std <- summary(pca_happiness2_std)
s_std
pca_pr_std <- round(100*s_std$importance[2,], digits = 1)
pca_pr_std
pc_lab_std <- paste0(names(pca_pr_std), " (", pca_pr_std,"%)")
biplot(pca_happiness2_std, cex = c(0.5, 1.5), col = c("black", "darkgreen"), xlab = pc_lab_std[1], ylab = pc_lab_std[2], sub = "Principal components explaining variance in standardized happiness2 data")
library(MASS); library(scales)
happiness2_std <- scale(happiness2)
pca_happiness2_std <- prcomp(happiness2_std)
pca_happiness2_std
s_std <- summary(pca_happiness2_std)
s_std
pca_pr_std <- round(100*s_std$importance[2,], digits = 1)
pca_pr_std
pc_lab_std <- paste0(names(pca_pr_std), " (", pca_pr_std,"%)")
biplot(pca_happiness2_std, cex = c(0.5, 1.5), col = c("grey80", "darkgreen"), xlab = pc_lab_std[1], ylab = pc_lab_std[2], sub = "Principal components explaining variance in standardized happiness2 data")
library(MASS); library(scales)
happiness2_std <- scale(happiness2)
pca_happiness2_std <- prcomp(happiness2_std)
pca_happiness2_std
s_std <- summary(pca_happiness2_std)
s_std
pca_pr_std <- round(100*s_std$importance[2,], digits = 1)
pca_pr_std
pc_lab_std <- paste0(names(pca_pr_std), " (", pca_pr_std,"%)")
biplot(pca_happiness2_std, cex = c(0.5, 1.5), col = c("black", "green"), xlab = pc_lab_std[1], ylab = pc_lab_std[2], sub = "Principal components explaining variance in standardized happiness2 data")
happiness2_f <- mutate(happiness2, high_freedom = freedom > 0.35)
g2 <- ggplot(data = happiness2_f, aes(x = high_freedom))
g2 + geom_bar(col = "green") + ggtitle("Distribution of the high freedom variable")
happiness2_f <- mutate(happiness2, high_freedom = freedom > 0.35)
g2 <- ggplot(data = happiness2_f, aes(x = high_freedom))
g2 + geom_bar(position = "fill", col = "green") + ggtitle("Distribution of the high freedom variable")
happiness2_f <- mutate(happiness2, high_freedom = freedom > 0.35)
g2 <- ggplot(data = happiness2_f, aes(x = high_freedom))
g2 + geom_bar(col = "green") + ggtitle("Distribution of the high freedom variable")
happiness2_f <- mutate(happiness2, high_freedom = freedom > 0.35)
g2 <- ggplot(data = happiness2_f, aes(x = high_freedom))
g2 + geom_bar() + ggtitle("Distribution of the high freedom variable")
happiness2_f <- mutate(happiness2, high_freedom = freedom > 0.35)
g2 <- ggplot(data = happiness2_f, aes(x = high_freedom))
g2 + geom_bar() + ggtitle("Distribution of the high freedom variable")
happiness2_f <- mutate(happiness2, high_freedom = freedom > 0.35)
g2 <- ggplot(data = happiness2_f, aes(x = high_freedom))
g2 + geom_bar() + ggtitle("Distribution of the high freedom variable")
happiness2_f <- mutate(happiness2, high_freedom = freedom > 0.35)
g2 <- ggplot(data = happiness2_f, aes(x = high_freedom))
g2 + geom_bar() + ggtitle("Distribution of the high freedom variable")
happiness2_f <- mutate(happiness2, high_freedom = freedom > 0.35)
g2 <- ggplot(data = happiness2_f, aes(x = high_freedom))
g2 + geom_bar() + ggtitle("Distribution of the high freedom variable")
happiness2 <- read.table("happiness2.csv", sep = ",", header=TRUE)
str(happiness2)
colnames(happiness2)[1] <- "country"
rownames(happiness2) <- happiness2$country
happiness2 <- dplyr::select(happiness2, -country)
happiness2_f <- mutate(happiness2, high_freedom = freedom > 0.35)
g2 <- ggplot(data = happiness2_f, aes(x = high_freedom))
g2 + geom_bar() + ggtitle("Distribution of the high freedom variable")
library(MASS); library(scales)
happiness2_std <- scale(happiness2)
pca_happiness2_std <- prcomp(happiness2_std)
pca_happiness2_std
s_std <- summary(pca_happiness2_std)
s_std
pca_pr_std <- round(100*s_std$importance[2,], digits = 1)
pca_pr_std
pc_lab_std <- paste0(names(pca_pr_std), " (", pca_pr_std,"%)")
biplot(pca_happiness2_std, cex = c(0.5, 1.5), col = c("black", "green"), xlab = pc_lab_std[1], ylab = pc_lab_std[2], sub = "Principal components explaining variance in standardized happiness2 data")
m <- glm(high_freedom ~ gdpcapita + socialsupport + hlifeexp + corruption + generosity, data = happiness2_f, family = "binomial")
summary(m)
OR <- coef(m) %>% exp
CI <- confint(m) %>% exp
cbind(OR, CI)
happiness2 <- read.table("happiness2.csv", sep = ",", header=TRUE)
str(happiness2)
colnames(happiness2)[1] <- "country"
rownames(happiness2) <- happiness2$country
happiness2 <- dplyr::select(happiness2, -country)
happiness2 <- read.table("happiness2.csv", sep = ",", header=TRUE)
str(happiness2)
colnames(happiness2)[1] <- "country"
rownames(happiness2) <- happiness2$country
happiness2 <- dplyr::select(happiness2, -country)
library("rmarkdown")
happiness2_f <- mutate(happiness2, high_freedom = freedom > 0.35)
g2 <- ggplot(data = happiness2_f, aes(x = high_freedom))
g2 + geom_bar() + ggtitle("Distribution of the freedom variable")
library(MASS); library(scales)
happiness2_stdX <- scale(happiness2)
summary(happiness2_stdX)
class(happiness2_stdX)
happiness2_stdX <- as.data.frame(happiness2_stdX)
library(MASS); library(scales)
happiness2_stdX <- scale(happiness2)
summary(happiness2_stdX)
class(happiness2_stdX)
happiness2_stdX <- as.data.frame(happiness2_stdX)
scaled_happ.score <- happiness2_stdX$happ.score
summary(scaled_happ.score)
bins <- quantile(scaled_happ.score)
bins
happ.quant <- cut(scaled_happ.score, breaks = bins, include.lowest = TRUE, label = c("low", "med_low", "med_high", "high"))
table(happ.quant)
happiness2_stdX <- dplyr::select(happiness2_stdX, -happ.score)
happiness2_stdX <- data.frame(happiness2_stdX, happ.quant)
lda.fit <- lda(happ.quant ~ ., data = happiness2_stdX)
lda.fit
lda.arrows <- function(x, myscale = 1, arrow_heads = 0.1, color = "red", tex = 0.75, choices = c(1,2)){
heads <- coef(x)
arrows(x0 = 0, y0 = 0,
x1 = myscale * heads[,choices[1]],
y1 = myscale * heads[,choices[2]], col=color, length = arrow_heads)
text(myscale * heads[,choices], labels = row.names(heads),
cex = tex, col=color, pos=3)
}
classes <- as.numeric(happiness2_stdX$happ.quant)
plot(lda.fit, dimen = 2, col = classes, pch = classes)
lda.arrows(lda.fit, myscale = 3)
lda.fit <- lda(happ.quant ~ ., data = happiness2_stdX)
lda.fit
lda.arrows <- function(x, myscale = 1, arrow_heads = 0.1, color = "orange", tex = 0.75, choices = c(1,2)){
heads <- coef(x)
arrows(x0 = 0, y0 = 0,
x1 = myscale * heads[,choices[1]],
y1 = myscale * heads[,choices[2]], col=color, length = arrow_heads)
text(myscale * heads[,choices], labels = row.names(heads),
cex = tex, col=color, pos=3)
}
classes <- as.numeric(happiness2_stdX$happ.quant)
plot(lda.fit, dimen = 2, col = classes, pch = classes)
lda.arrows(lda.fit, myscale = 3)
lda.fit <- lda(happ.quant ~ ., data = happiness2_stdX)
lda.fit
lda.arrows <- function(x, myscale = 1, arrow_heads = 0.1, color = "orange", tex = 0.75, choices = c(1,2)){
heads <- coef(x)
arrows(x0 = 0, y0 = 0,
x1 = myscale * heads[,choices[1]],
y1 = myscale * heads[,choices[2]], col=color, length = arrow_heads)
text(myscale * heads[,choices], labels = row.names(heads),
cex = tex, col=color, pos=3)
}
classes <- as.numeric(happiness2_stdX$happ.quant)
plot(lda.fit, dimen = 2, col = classes, pch = classes)
lda.arrows(lda.fit, myscale = 3)
